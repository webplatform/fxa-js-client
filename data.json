{
    "project": {
        "name": "fxa-js-client",
        "description": "Web client that talks to the Firefox Accounts API server",
        "version": "0.1.20-wpd"
    },
    "files": {
        "client/lib/credentials.js": {
            "name": "client/lib/credentials.js",
            "modules": {},
            "classes": {
                "credentials": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "client/lib/hawkCredentials.js": {
            "name": "client/lib/hawkCredentials.js",
            "modules": {},
            "classes": {
                "hawkCredentials": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "client/lib/hkdf.js": {
            "name": "client/lib/hkdf.js",
            "modules": {},
            "classes": {
                "hkdf": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "client/lib/pbkdf2.js": {
            "name": "client/lib/pbkdf2.js",
            "modules": {},
            "classes": {
                "pbkdf2": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "client/lib/request.js": {
            "name": "client/lib/request.js",
            "modules": {},
            "classes": {
                "Request": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "client/FxAccountClient.js": {
            "name": "client/FxAccountClient.js",
            "modules": {},
            "classes": {
                "FxAccountClient": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "credentials": {
            "name": "credentials",
            "shortname": "credentials",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "client/lib/credentials.js",
            "line": 40,
            "is_constructor": 1
        },
        "hawkCredentials": {
            "name": "hawkCredentials",
            "shortname": "hawkCredentials",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "client/lib/hawkCredentials.js",
            "line": 11,
            "itemtype": "method",
            "params": [
                {
                    "name": "tokenHex",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "size",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            }
        },
        "hkdf": {
            "name": "hkdf",
            "shortname": "hkdf",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "client/lib/hkdf.js",
            "line": 7,
            "description": "hkdf - The HMAC-based Key Derivation Function\nbased on https://github.com/mozilla/node-hkdf",
            "params": [
                {
                    "name": "ikm",
                    "description": "Initial keying material",
                    "type": "BitArray"
                },
                {
                    "name": "info",
                    "description": "Key derivation data",
                    "type": "BitArray"
                },
                {
                    "name": "salt",
                    "description": "Salt",
                    "type": "BitArray"
                },
                {
                    "name": "length",
                    "description": "Length of the derived key in bytes",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "promise object- It will resolve with `output` data"
            }
        },
        "pbkdf2": {
            "name": "pbkdf2",
            "shortname": "pbkdf2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "client/lib/pbkdf2.js",
            "line": 7,
            "is_constructor": 1
        },
        "Request": {
            "name": "Request",
            "shortname": "Request",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "client/lib/request.js",
            "line": 8,
            "is_constructor": 1,
            "params": [
                {
                    "name": "baseUri",
                    "description": "Base URI",
                    "type": "String"
                },
                {
                    "name": "xhr",
                    "description": "XMLHttpRequest constructor",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "localtimeOffsetMsec",
                            "description": "Local time offset with the remote auth server's clock",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "FxAccountClient": {
            "name": "FxAccountClient",
            "shortname": "FxAccountClient",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "client/FxAccountClient.js",
            "line": 17,
            "is_constructor": 1,
            "params": [
                {
                    "name": "uri",
                    "description": "Auth Server URI",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "Configuration",
                    "type": "Object"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "client/lib/credentials.js",
            "line": 15,
            "description": "Key Wrapping with a name",
            "itemtype": "method",
            "name": "kw",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of the salt",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the salt combination with the namespace",
                "type": "BitArray"
            },
            "class": "credentials"
        },
        {
            "file": "client/lib/credentials.js",
            "line": 27,
            "description": "Key Wrapping with a name and an email",
            "itemtype": "method",
            "name": "kwe",
            "static": 1,
            "params": [
                {
                    "name": "name",
                    "description": "The name of the salt",
                    "type": "String"
                },
                {
                    "name": "email",
                    "description": "The email of the user.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the salt combination with the namespace",
                "type": "BitArray"
            },
            "class": "credentials"
        },
        {
            "file": "client/lib/credentials.js",
            "line": 45,
            "description": "Setup credentials",
            "itemtype": "method",
            "name": "setup",
            "params": [
                {
                    "name": "emailInput",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "passwordInput",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with `result` of generated credentials",
                "type": "Promise"
            },
            "class": "credentials"
        },
        {
            "file": "client/lib/credentials.js",
            "line": 83,
            "description": "Wrap",
            "itemtype": "method",
            "name": "wrap",
            "params": [
                {
                    "name": "bitArray1",
                    "description": "",
                    "type": "BitArray"
                },
                {
                    "name": "bitArray2",
                    "description": "",
                    "type": "BitArray"
                }
            ],
            "return": {
                "description": "wrap result of the two bitArrays",
                "type": "BitArray"
            },
            "class": "credentials"
        },
        {
            "file": "client/lib/credentials.js",
            "line": 100,
            "description": "Unbundle the WrapKB",
            "params": [
                {
                    "name": "key",
                    "description": "Bundle Key in hex",
                    "type": "String"
                },
                {
                    "name": "bundle",
                    "description": "Key bundle in hex",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "credentials"
        },
        {
            "file": "client/lib/credentials.js",
            "line": 131,
            "description": "Derive the HMAC and XOR keys required to encrypt a given size of payload.",
            "params": [
                {
                    "name": "key",
                    "description": "Hex Bundle Key",
                    "type": "String"
                },
                {
                    "name": "keyInfo",
                    "description": "Bundle Key Info",
                    "type": "String"
                }
            ],
            "return": {
                "description": "hmacKey, xorKey",
                "type": "Object"
            },
            "class": "credentials"
        },
        {
            "file": "client/lib/pbkdf2.js",
            "line": 12,
            "itemtype": "method",
            "name": "derive",
            "params": [
                {
                    "name": "input",
                    "description": "The password hex buffer.",
                    "type": "BitArray"
                },
                {
                    "name": "salt",
                    "description": "The salt string buffer.",
                    "type": "BitArray"
                }
            ],
            "return": {
                "description": "iterations the derived key bit array.",
                "type": "Int"
            },
            "class": "pbkdf2"
        },
        {
            "file": "client/lib/request.js",
            "line": 27,
            "itemtype": "method",
            "name": "send",
            "params": [
                {
                    "name": "path",
                    "description": "Request path",
                    "type": "String"
                },
                {
                    "name": "method",
                    "description": "HTTP Method",
                    "type": "String"
                },
                {
                    "name": "credentials",
                    "description": "HAWK Headers",
                    "type": "Object"
                },
                {
                    "name": "jsonPayload",
                    "description": "JSON Payload",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "retrying",
                            "description": "Flag indicating if the request is a retry",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "headers",
                            "description": "A set of extra headers to add to the request",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "Request"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 40,
            "itemtype": "method",
            "name": "signUp",
            "params": [
                {
                    "name": "email",
                    "description": "Email input",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "Password input",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "service",
                            "description": "Opaque alphanumeric token to be included in verification links",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "redirectTo",
                            "description": "a URL that the client should be redirected to after handling the request",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "preVerified",
                            "description": "set email to be verified if possible",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "lang",
                            "description": "set the language for the 'Accept-Language' header",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 103,
            "itemtype": "method",
            "name": "signIn",
            "params": [
                {
                    "name": "email",
                    "description": "Email input",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "Password input",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "keys",
                            "description": "If `true`, calls the API with `?keys=true` to get the keyFetchToken",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "skipCaseError",
                            "description": "If `true`, the request will skip the incorrect case error",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 157,
            "itemtype": "method",
            "name": "verifyCode",
            "params": [
                {
                    "name": "uid",
                    "description": "Account ID",
                    "type": "String"
                },
                {
                    "name": "code",
                    "description": "Verification code",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 173,
            "itemtype": "method",
            "name": "recoveryEmailStatus",
            "params": [
                {
                    "name": "sessionToken",
                    "description": "sessionToken obtained from signIn",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 188,
            "description": "Re-sends a verification code to the account's recovery email address.",
            "itemtype": "method",
            "name": "recoveryEmailResendCode",
            "params": [
                {
                    "name": "sessionToken",
                    "description": "sessionToken obtained from signIn",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "service",
                            "description": "Opaque alphanumeric token to be included in verification links",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "redirectTo",
                            "description": "a URL that the client should be redirected to after handling the request",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "lang",
                            "description": "set the language for the 'Accept-Language' header",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 231,
            "description": "Used to ask the server to send a recovery code.\nThe API returns passwordForgotToken to the client.",
            "itemtype": "method",
            "name": "passwordForgotSendCode",
            "params": [
                {
                    "name": "email",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "service",
                            "description": "Opaque alphanumeric token to be included in verification links",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "redirectTo",
                            "description": "a URL that the client should be redirected to after handling the request",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "lang",
                            "description": "set the language for the 'Accept-Language' header",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 273,
            "description": "Re-sends a verification code to the account's recovery email address.\nHAWK-authenticated with the passwordForgotToken.",
            "itemtype": "method",
            "name": "passwordForgotResendCode",
            "params": [
                {
                    "name": "email",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "passwordForgotToken",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "service",
                            "description": "Opaque alphanumeric token to be included in verification links",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "redirectTo",
                            "description": "a URL that the client should be redirected to after handling the request",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "lang",
                            "description": "set the language for the 'Accept-Language' header",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 321,
            "description": "Submits the verification token to the server.\nThe API returns accountResetToken to the client.\nHAWK-authenticated with the passwordForgotToken.",
            "itemtype": "method",
            "name": "passwordForgotVerifyCode",
            "params": [
                {
                    "name": "code",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "passwordForgotToken",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 344,
            "description": "Returns the status for the passwordForgotToken.\nIf the request returns a success response, the token has not yet been consumed.",
            "itemtype": "method",
            "name": "passwordForgotStatus",
            "params": [
                {
                    "name": "passwordForgotToken",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 363,
            "description": "The API returns reset result to the client.\nHAWK-authenticated with accountResetToken",
            "itemtype": "method",
            "name": "accountReset",
            "params": [
                {
                    "name": "email",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "newPassword",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "accountResetToken",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 397,
            "description": "Get the base16 bundle of encrypted kA|wrapKb.",
            "itemtype": "method",
            "name": "accountKeys",
            "params": [
                {
                    "name": "keyFetchToken",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "oldUnwrapBKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON of {kA, kB}  of the key bundle",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 435,
            "description": "Gets the collection of devices currently authenticated and syncing for the user.",
            "itemtype": "method",
            "name": "accountDevices",
            "params": [
                {
                    "name": "sessionToken",
                    "description": "User session token",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 453,
            "description": "This deletes the account completely. All stored data is erased.",
            "itemtype": "method",
            "name": "accountDestroy",
            "params": [
                {
                    "name": "email",
                    "description": "Email input",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "Password input",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "skipCaseError",
                            "description": "If `true`, the request will skip the incorrect case error",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 499,
            "description": "Gets the status of an account",
            "itemtype": "method",
            "name": "accountStatus",
            "params": [
                {
                    "name": "uid",
                    "description": "User account id",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 512,
            "description": "Destroys this session, by invalidating the sessionToken.",
            "itemtype": "method",
            "name": "sessionDestroy",
            "params": [
                {
                    "name": "sessionToken",
                    "description": "User session token",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 530,
            "description": "Responds successfully if the session status is valid, requires the sessionToken.",
            "itemtype": "method",
            "name": "sessionStatus",
            "params": [
                {
                    "name": "sessionToken",
                    "description": "User session token",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 548,
            "description": "Sign a BrowserID public key",
            "itemtype": "method",
            "name": "certificateSign",
            "params": [
                {
                    "name": "sessionToken",
                    "description": "User session token",
                    "type": "String"
                },
                {
                    "name": "publicKey",
                    "description": "The key to sign",
                    "type": "Object"
                },
                {
                    "name": "duration",
                    "description": "Time interval from now when the certificate will expire in seconds",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 574,
            "description": "Change the password from one known value to another.",
            "itemtype": "method",
            "name": "passwordChange",
            "params": [
                {
                    "name": "email",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "oldPassword",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "newPassword",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 604,
            "description": "First step to change the password.",
            "itemtype": "method",
            "name": "passwordChangeStart",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "email",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "oldPassword",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "skipCaseError",
                            "description": "If `true`, the request will skip the incorrect case error",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON of `xhr.responseText` and `oldUnwrapBKey`",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 657,
            "description": "Second step to change the password.",
            "itemtype": "method",
            "name": "_passwordChangeKeys",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "oldCreds",
                    "description": "This object should consists of `oldUnwrapBKey`, `keyFetchToken` and `passwordChangeToken`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON of `xhr.responseText`",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 671,
            "description": "Third step to change the password.",
            "itemtype": "method",
            "name": "_passwordChangeFinish",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "email",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "newPassword",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "oldCreds",
                    "description": "This object should consists of `oldUnwrapBKey`, `keyFetchToken` and `passwordChangeToken`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise that will be fulfilled with JSON of `xhr.responseText`",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        },
        {
            "file": "client/FxAccountClient.js",
            "line": 709,
            "description": "Get 32 bytes of random data. This should be combined with locally-sourced entropy when creating salts, etc.",
            "itemtype": "method",
            "name": "getRandomBytes",
            "return": {
                "description": "A promise that will be fulfilled with JSON `xhr.responseText` of the request",
                "type": "Promise"
            },
            "class": "FxAccountClient"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " client/lib/credentials.js:100"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " client/lib/credentials.js:131"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " client/lib/hawkCredentials.js:11"
        },
        {
            "message": "Missing item type\nUnbundle the WrapKB",
            "line": " client/lib/credentials.js:100"
        },
        {
            "message": "Missing item type\nDerive the HMAC and XOR keys required to encrypt a given size of payload.",
            "line": " client/lib/credentials.js:131"
        }
    ]
}